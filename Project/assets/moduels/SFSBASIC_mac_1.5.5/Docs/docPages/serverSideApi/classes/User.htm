<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" /><title>SmartFoxServer Documentation</title><link href="../../../api.css" rel="stylesheet" type="text/css" /></head><body class="plain"> <p class="itemName">User class </p> <p class="title">Availability:</p> <p class="plain">SmartFoxServer PRO 1.2.1 </p> <p class="title">Description:</p> <p class="plain">A User object represents a client connected to the server and   logged in one Zone. (It can be present in one room or more) <br />Here follows a list of public methods for this object.</p> <p class="title">Public Methods: </p> <table  border="0" cellspacing="0" cellpadding="3">   <tr>     <td valign="top" nowrap="nowrap"><strong>getIpAddress()</strong></td>     <td>&nbsp;</td>     <td>Return the ip address of the client </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>getLastMessageTime()</strong></td>     <td>&nbsp;</td>     <td>Return the time (expressed in milliseconds) of the last time a message       was sent</td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>getLoginTime()</strong></td>     <td>&nbsp;</td>     <td>Return the login time (expressed in milliseconds)</td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>getName()</strong></td>     <td>&nbsp;</td>     <td>Return the user name </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>getPlayerIndex()</strong></td>     <td>&nbsp;</td>     <td>Return the player index for the current room </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>getPlayerIndex(roomObj)</strong></td>     <td>&nbsp;</td>     <td>Return the player index for the specified room </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>getRoomsConnected()</strong></td>     <td>&nbsp;</td>     <td>Return an array containing the roomId(s) of all rooms where the user       is connected </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>getUserId()</strong></td>     <td>&nbsp;</td>     <td>Return the unique User id </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>getVariable(name)</strong></td>     <td>&nbsp;</td>     <td>Return the room variable with the requested name </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>getVariables()</strong></td>     <td>&nbsp;</td>     <td>Return a java.util.HashMap with all the User Variables</td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>isAdmin()</strong></td>     <td>&nbsp;</td>     <td>Return true if the user is an administrator </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>isModerator()</strong></td>     <td>&nbsp;</td>     <td>Return true if the user is a moderator </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>isSpectator()</strong></td>     <td>&nbsp;</td>     <td>Return true if the user is set as spectator</td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>setAsModerator(flag)</strong></td>     <td>&nbsp;</td>     <td>Set the status of the moderator flag </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>updateMessageTime()</strong></td>     <td>&nbsp;</td>     <td>Updates the last messge time counter</td>   </tr></table> <p class="title">Public Properties: </p>It is also possible to &quot;attach&quot; your own custom properties to the User()object by using the public &quot;<strong>properties</strong>&quot; object. Theobject works like an associative array. Below follows a list of methods available:<br /> <br /> <table  border="0" cellspacing="0" cellpadding="3">   <tr>     <td valign="top" nowrap="nowrap"><strong>put(key, value)</strong></td>     <td>&nbsp;</td>     <td>Put a new value/object </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>get(key)</strong></td>     <td>&nbsp;</td>     <td>Retrive the value/object for the passed key. If the object doesn't exist       it returns null </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>remove(key)</strong></td>     <td>&nbsp;</td>     <td>Remove the value/object </td>   </tr>   <tr>     <td valign="top" nowrap="nowrap"><strong>size()</strong></td>     <td>&nbsp;</td>     <td>Return the size of the properties array</td>   </tr> </table> <br /> <br /><span class="title">Example:</span><br /><br /><pre class="code">var score = 1500var bestScore = 12000var weapons = ["axe", "sword", "knife", "bow"]// Save data in the user.properties associative arrayuser.properties.put("score", score)user.properties.put("bestScore", bestScore)user.properties.put("weapons", weapons)// Retrieve data and display itvar list = user.properties.get("weapons")for (var i in list)	trace("Weapon: " + list[i])</pre></body></html>