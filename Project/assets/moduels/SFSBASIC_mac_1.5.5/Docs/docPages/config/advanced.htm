<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
"http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<title>SmartFoxServer Documentation</title>
<script language="javascript" src="../../lib.js"></script>
<link href="../../main.css" rel="stylesheet" type="text/css">
</head>

<body class="bodyStyle">
 <p class="title"><a name="top"></a>2.2 Configuration: advanced settings </p>
 <p>Once you've done the basic server settings you could be interested in exploiting
   some of the advanced capabilities of <strong>SmartFoxServer</strong> in order
   to obtain better security and performance:</p>
 <table border="0" cellspacing="0" cellpadding="3">
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#1">AntiFlood Filter</a></td>
   </tr>
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#2">IP Address Filter</a></td>
   </tr>
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#3">Bad words filtering </a></td>
   </tr>
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#3aaa">Database Manager (PRO) </a></td>
   </tr>
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#3aa">Mailer configuration (PRO)</a> </td>
   </tr>
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#3a">uCount updates and bandwidth</a> </td>
   </tr>
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#4">Performance Settings</a></td>
   </tr>
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#4a">Other security settings </a></td>
   </tr>
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#5">Server Java Virtual Machine</a></td>
   </tr>
   <tr>
     <td><strong>&raquo;</strong></td>
     <td><a href="#6">Memory Management/Tuning</a></td>
   </tr>
 </table>
 <p class="subTitle"><a name="1"></a>&raquo; AntiFlood Filter </p>
 <p><strong>SmartFoxServer</strong> comes with a configurable <strong>anti-flood
     filter</strong>   which allows to automatically kick and banish users that are trying to flood
   your applications with messages.<br>
By default this is how the anti-flood filter configuration looks like:</p>
 <pre class="code">&lt;AntiFlood active=&quot;true&quot;&gt;
	&lt;MinMsgTime tolerance=&quot;5&quot;&gt;1000&lt;/MinMsgTime&gt;
	&lt;MaxRepeatedMessages&gt;10&lt;/MaxRepeatedMessages&gt;
	&lt;WarningsBeforeKick&gt;2&lt;/WarningsBeforeKick&gt;
	&lt;WarningMessage&gt;&lt;![CDATA[No flooding allowed!)]]&gt;&lt;/WarningMessage&gt;
	&lt;KickMessage&gt;&lt;![CDATA[You've been warned! Now flooding! Now you're kicked]]&gt;&lt;/KickMessage&gt;
	&lt;BanMessage&gt;&lt;![CDATA[Stop Flooding!! You're being banned]]&gt;&lt;/BanMessage&gt;
	&lt;BanAfter timeSpan=&quot;60&quot;&gt;3&lt;/BanAfter&gt;
&lt;/AntiFlood&gt;</pre>
 <p>The <strong>active</strong> attribute is used to toggle the filter on and off. Below follows
   a table with all the available settings:</p>
 <table width="100%"  border="0" cellspacing="1" cellpadding="4">
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;MinMsgTime&gt;</strong></td>
     <td>It's the minimum time allowed between two messages. The server will
       tolerate a number of messages<br>
sent below the specified rate before sending an automatic warning message to
the client.<br>
The &quot;<strong>tolerance</strong>&quot; attribute represents the amount of
messages the server will accept before sending the warning.</td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;MaxRepeatedMessages&gt;</strong></td>
     <td>The maximum number of identical messages a client can send in a row.
       After this value has been reached the server will automatically send an
       administrator warning message to the user.</td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;WarningsBeforeKick&gt;</strong></td>
     <td>The number of warning messages before a user is kicked from the server</td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;WarningMessage&gt;</strong></td>
     <td>A custom warning message (always enclose in a &lt;![CDATA[ ... ]]&gt; block)</td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;KickMessage&gt;</strong></td>
     <td>A custom kick message (always enclose in a &lt;![CDATA[ ... ]]&gt; block)</td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;BanMessage&gt;</strong></td>
     <td>A custom ban message (always enclose in a &lt;![CDATA[ ... ]]&gt; block)</td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;BanAfter&gt;</strong></td>
     <td>The number of kicks in the specified time range (timeSpan) before the
       user is banned. </td>
   </tr>
 </table>
 <p>By looking at the above xml configuration you will notice that the server
   tolerates a maximum of 5 messages sent under the specified rate (1 sec) before
   sending a warning message. Also a maximum of 10 identical messages are allowed.<br>
   After the server has sent 2 warnings the user will be kicked, and if he continues
 to flood with messages it will ba banned if he's been kicked 3 times in the
   last 60 minutes.</p>
 <p><a href="#top">^ top</a> <br> 
 </p>
 <p><span class="subTitle"><a name="2"></a>&raquo; IP Address Filter</span></p>
 <p>With  <strong>SmartFoxServer version 1.1.0</strong> and later you can also filter the number
   of users that can be created by one single IP Address.<br>
   The IP Address Filter is very easy to configure:</p>
 <pre class="code">
 &lt;IpFilter&gt;10&lt;/IpFilter&gt;
</pre>
 <p><br>
  This way you allow a single IP address to create up to 10 users in the server.
  To turn it off just set it to zero.<br>
  The filter is useful to avoid connection flooding from hackers and it is usually
  reccomendable to keep it turned on and set to a value like 10 or 15 unless
you need to be more restrictive. </p>
 <p><a href="#top">^ top</a> <br>
    

</p>
<p class="subTitle"><a name="3" id="3"></a>&raquo; Bad words filtering </p>
 <p><strong>SmartFoxServer </strong>comes with a built-in and customizable <strong>bad
   words filter</strong> which allow automatic moderation of chat applications and games.<br>
   You can provide a custom list of bad words that should be filtered and the
   server will automatically replace them with asterisks or completely remove
   the phrase.<br>
   Also you can turn automatic administrator messages and specify the amount
   of warnings before the user is kicked and the amounts of kicks before the
   user is completely banned from the server.<br>
   <br>
   The &lt;BadWordsFilter&gt; config section may look like this:
 <pre class="code">
&lt;BadWordsFilter active=&quot;true&quot;&gt;
	&lt;FilterMode&gt;filter&lt;/FilterMode&gt;
	&lt;Warnings&gt;true&lt;/Warnings&gt;
	&lt;FilterRoomNames&gt;true&lt;/FilterRoomNames&gt;
	&lt;FilterUserNames&gt;true&lt;/FilterUserNames&gt;
	&lt;WarningsBeforeKick&gt;3&lt;/WarningsBeforeKick&gt;
	&lt;WarningMessage&gt;&lt;![CDATA[No swearing!)]]&gt;&lt;/WarningMessage&gt;
	&lt;KickMessage&gt;&lt;![CDATA[You've been warned! No Swearing! Now you're kicked]]&gt;&lt;/KickMessage&gt;
	&lt;BanMessage&gt;&lt;![CDATA[Stop Swearing! You're being banned!]]&gt;&lt;/BanMessage&gt; 
	&lt;BanAfter&gt;1&lt;/BanAfter&gt;

	&lt;BadWordsList&gt;
		&lt;badWord&gt;asshole&lt;/badWord&gt;
		&lt;badWord&gt;shithead&lt;/badWord&gt;
		&lt;badWord&gt;shit&lt;/badWord&gt;
		&lt;badWord&gt;bitch&lt;/badWord&gt;
		&lt;badWord&gt;slut&lt;/badWord&gt;
		&lt;badWord&gt;ass&lt;/badWord&gt;
	&lt;/BadWordsList&gt;
&lt;/BadWordsFilter&gt;   </pre>
 <p>The <strong>active</strong> attribute is used to toggle the filter on and off. Below follows
 a table with all the available settings:</p>
 <table width="100%"  border="0" cellspacing="1" cellpadding="4">
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;FilterMode&gt;</strong></td>
     <td>you have two filtering modes called <strong>FILTER</strong> and <strong>REMOVE</strong> <br>
       <strong>FILTER</strong>: it is the less strict mode. It will substitute the bad words with
         asterisks<br>
         <strong>REMOVE</strong>: it will remove every phrase containing bad words </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;StripCharacters&gt;</strong></td>
     <td><span style="font-size:90%"><strong>(Available from version 1.5.5 and higher)</strong></span> <br>
       Specify which characters should be stripped from the original message / name etc... before checking for bad words<br>
       It can be used to avoid the a certain &quot;BadWord&quot; is interspersed with other characters.<br>
       Example: B_a_d_____W_o___r_d<br>
       <br>
       If you specify that the _ (underscore) should be stripped the bad word will be caught anyway.<br>
       By default the following characters are stripped: <span style="color:#CC0000">, . ; : _ ! $ % &amp; / # * - +</span></td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;Warnings&gt;</strong></td>
     <td>it toggles the warning messages on and off. If you turn them on the
     server will send a custom warning message to the user each time a bad word
       is detected or removed.</td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;FilterRoomNames&gt;</strong></td>
     <td>If set to TRUE it will filter bad words in room names </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;FilterUserNames&gt;</strong></td>
     <td>If set to TRUE it will filter bad words in user nicknames </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;WarningsBeforeKick&gt;</strong></td>
     <td>Here you can specify how many warnings are sent before the user is automatically
     kicked </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;WarningMessage&gt;</strong></td>
     <td>The custom warning message </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;KickMessage&gt;</strong></td>
     <td>The custom kick message </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;BanMessage&gt;</strong></td>
     <td>The custom ban message </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;BanAfter&gt;</strong></td>
     <td>Indicates how many kicks are tolerated before the user is automatically
     banned from the server </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;BadWordsList&gt;</strong></td>
     <td>The custom list of bad words to be filtered. Each word is contained
       in a &lt;badWord&gt;&lt;/badWord&gt; tag.<br>
       Bad words should not contain white spaces. If you want to add a phrase
       that contains more than one word just eliminate spaces. </td>
   </tr>
</table>
 <p><a href="#top">^ top</a> <br>
   <br>
   <br>
   <br>
   <span class="subTitle"><a name="3aaa" id="3aaa"></a>&raquo; Database Manager </span>(SFS
   PRO only) <br>
   <br>
   <strong>SmartFoxServer PRO</strong> can easily connect to any external database.
   Each <strong>Zone</strong> in you server can connect to a different data source, allowing each
   application to be completely independent from the others. <br>
   <br>
   In order to setup your database connections you should configure the <strong>&lt;DatabaseManager&gt;&lt;/DatabaseManager&gt;</strong>   section
   in your Zone definitions. A tutorial is provided showing different examples
   and explaining all the available parameters.<br>
   <br>
   The tutorial is located in <a href="../extIntro/databaseConnection.htm">Section 6.3 of the documentation </a><br>
   <br>
   <a href="#top">^ top</a> <br>
   <br>
   <br>
   <br>
   <span class="subTitle"><a name="3aa" id="3aa"></a>&raquo; Mailer configuration </span>(SFS
   PRO only) <br>
   <br>
   With <strong>SmartFoxServer PRO</strong> you can easily send emails without the need of external
   software. In order to do so you only need to configure a valid SMTP account
   that will be used for sending mail messages. The <strong>&lt;Mailer&gt;&lt;/Mailer&gt;</strong> block
 contains  three settings: </p>
 <table width="100%"  border="0" cellspacing="1" cellpadding="4">
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;MailHost&gt;</strong></td>
     <td>The SMTP IP address or host name. Example: test.mail.com </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;MailUser&gt;</strong></td>
     <td>A valid user name for the SMTP server specified. </td>
   </tr>
   <tr>
     <td valign="top" bgcolor="#f4f4f4"><strong>&lt;MailPass&gt;</strong></td>
     <td>The account password (if needed)</td>
   </tr>
 </table>
 <p><a href="#top">^ top</a> <br>
   <br>
 </p>
 <p class="subTitle"><a name="3a" id="3a"></a>&raquo; uCount updates and bandwidth</p>
 <p>The user count updates are sent by the server to all users in the zone to
   keep them updated about the number of users and spectators (for game rooms)
   in each room. By default, from <strong>version 1.1.0</strong>, all non-game
   rooms will receive these updates and all game-rooms won't.<br>
   <br>
   These settings can be overridden by the developer at any time by changing
   the server configuration or through the Flash API.<br>
   <br>
   The most important thing to understand is that many messages can be sent by
   the server in order to update all the clients about the changes that are happening
   in each room. Imagine having 600 users in a zone: 20 users in 30 rooms. Each
   time one user  leaves a room and joins another one, the server should dispatch
   400 messages to notify the change to all people in the zone. The more
   users you have the more notifications should be sent on each change.<br>
   <br>
   To avoid wasting precious bandwidth you should always specify which rooms
   should receive these notifications and which shouldn't.<br>
   This can be done in
   three ways:</p>
 <p>1) By setting  <strong>uCountUpdates</strong> attribute in the<strong> &lt;Zone&gt;</strong> definition:
   by setting it to &quot;false&quot; you will completely disable this feature.
   The deafult is &quot;true&quot;.</p>
 <p>2) By setting  <strong>uCountUpdates</strong> attribute in the<strong> &lt;Room&gt;</strong> definition:
 the default value is &quot;true&quot; for normal rooms and &quot;false&quot; for game rooms.</p>
 <p>3) By specifying the <strong>uCount</strong> property in the object passed
   to the <strong>createRoom()</strong>   method, in the Flash API. (check the
   method docs for more info) </p>
 <p><a href="#top">^ top</a> </p>
 <p class="subTitle"><br>
   <a name="4" id="4"></a>&raquo; Performance Settings</p>
 <p><strong>SmartFoxServer</strong> can easily scale to many different hardware configuration
 allowing to fully take advantage of single and multi-cpu server configurations.</p>
<p>The <strong>&lt;OutQueueThreads&gt;</strong> tag represents the number of Java worker threads
   used for the <strong>SmartFoxServer EventWriter</strong>.<br>
  The <strong>EventWriter</strong> is the server stage responsible for broadcasting
   messages back to the connected clients and it is usually one of the most busy 
stages of the server.</p>
 <p>A simple example: imagine a room with 100 clients chatting together, each
   time a client sends a text message this is sent to the other 99 clients. So
   the EventWriter will have to send 99 messages everytime one single message
   is received. To help this stage with its work we can increase the amount of
   Java threads (processes) used by the EvenWriter, especially if we're using
   a multi-cpu machine.</p>
 <p>By default the EventWriter is assigned 1 thread and this configuration is
   ideal for all single CPU or dual-CPU machines. <br>
   However if you're running 4
   cpus or more you could increase this value to take advantage of your hardware
   architecture. A good rule to help you decide how many threads to assign is:
   (number of cpus / 2), so in a quad-CPU configuration you could assign 2 threads
   to the eventWriter like this:</p>
 <pre class="code">&lt;OutQueueThreads&gt;2&lt;/OutQueueThreads&gt;</pre>
<p>The <strong>&lt;ExtHandlerThreads&gt;</strong> tag sets the size of the thread pool used to run the server extensions. <br>
  By default SmartFoxServer uses  <strong>1 thread</strong> for this task, which is usually sufficient to run many extensions concurrently. You may want to increase this value only in special cases, for example when one extension blocks for a certain amount of time waiting for a resource, an external response or a complex database request etc... <br>
  <br>
  In order to decide if you need multiple threads for running your extensions
  you should profile your server side code and see if some of the above conditions are met. If you plan to use more than 1 thread for the ExtensionHandler stage, you will also need to review your code in order to prevent possible race conditions and synchronization issues.</p>
<p>An alternative to this approach (that we recommend) is to run your own thread(s) in the extension in order to handle the blocking/time-consuming operations: this way you can reduce the amount of synchronization needed in you server side code and you don't affect the other extensions running in the server. <br>
  <a href="#top"><br>
  ^ top</a> </p>
<br>

 <p class="subTitle"><a name="4a" id="4a"></a>&raquo; Other security settings
   (from version 1.3.0 and later) </p>
<p>For extra security it is possible to limit the amount of requests that the
   server holds in its internal queues and the number of Server-side variables
   that can be created. These extra settings allow the adminsitrator to fine-tune
   the server performance and avoid possible crashes if too much memory is being
   taken up by the server.<br>
   <br>
   The maximum number of requests that can be enqueued by the server is handled
by the <strong>&lt;MaxIncomingQueue&gt;</strong> parameter. By default we suggest
a value of <strong>8000</strong> requests to avoid overloading the JVM heap memory. <br>
During our tests we were able to keep more than 20.000 requests in the server
without problems and without changing the memory settings of the Virtual Machine.
However if you plan to let the server enqueue more than 20k requests we reccomend
to increment the memory settings of your JVM.
<br>
<br>
By default the server does not limit the number of Room/User variables that the
server can store, but we reccomend to the administrators to set these values
to provide better security.<br>
For example, if your multiuser application never need more than 20 User Variables
for each user we suggest to set that value in the configuration. This will ensure
that even malicious clients will not be able to create unwanted variables.<br>
<br>
You can find the variables settings in the &lt;ServerSetup&gt;&lt;/ServerSetup&gt; node. 
<pre class="code">
&lt;MaxRoomVars&gt;-1&lt;/MaxRoomVars&gt;
&lt;MaxUserVars&gt;-1&lt;/MaxUserVars&gt;
</pre>
<br>
A value of -1 means no variable limits.
 <br>
 <br>
 <a href="#top"> ^ top</a>
 <p class="subTitle"><br>
   <a name="5" id="5"></a>&raquo; Server Java Virtual Machine </p>
 <p class="plain">For better performance in a production environment we reccomend
   to use a the <strong>server version of the Sun Java Virtual Machine.<br>
   </strong>This version is available in the <strong>Sun JDK for
   Windows</strong> and in both
   <strong>JRE and JDK for Linux</strong> and it can be invoked with the &quot;-server&quot; parameter
   at command line.<br>
   <br>
   If you want to use a <strong>server JVM</strong> with <strong>SmartFoxServer</strong> just
   be sure to have it installed in your system and modify the SFS start script
   by adding a &quot;-server&quot; in front of the &quot;java&quot; command.</p>
 <p class="plain">The start script is located in the <strong>Server/</strong> directory
   in your main <strong>SmartFoxServer</strong> installation folder and it's called <strong>start.bat</strong>   (Windows) or <strong>start.sh</strong> (Linux / Unix / MacOS X) </p>
 <p class="plain"><a href="#top">^
     top</a> </p>
 <p class="subTitle"><br>
   <a name="6" id="6"></a>&raquo; Memory Management/Tuning</p>
 <p>Another important aspect related with server memory usage is related with
   the &quot;client message queue&quot;</p>
 <p><strong>SmartFoxServer</strong> allocates a &quot;message queue&quot; for
   each client connected: the queue is used to hold the server messages that
   are going to be sent. For a number of reasons (like network lag etc...) the
   server produces client responses at a much higher rate than what it can send
   through the network, so it is necessary to pile up these messages while the
   server waits for them  be delivered.</p>
 <p>By default each client is assigned a queue with a limit of 50 messages and
   in case this size is exceeded the 51st message is going to be dropped. We've
   found that a queue between 30 to 60 messages is ok for most applications and
   games, however you can change this value to accomodate your needs.</p>
 <p>When modifying this value you should take a couple of variables in consideration:</p>
 <p>- the amount of concurrent users you think you will handle<br>
   - the Java VM (virtual machine) heap limits</p>
 <p>If for example you're going to handle 2000 clients with a Message Queue of
   100 messages chances are you will run out of heap memory in the Java VM crashing
   the server. In this case you should manually increase the heap size (-Xms
   -Xmx) for the VM by modifying the launch.bat (Windows) or launch.sh (Unix/Linux/MacOS)
   script.   </p>
 <p>About setting the heap size you can read more here &gt;&gt; <a href="http://www.devx.com/tips/Tip/5578" target="_blank">http://www.devx.com/tips/Tip/5578</a><br>
   and here &gt;&gt; <a href="http://docs.sun.com/source/817-2180-10/pt_chap5.html#wp57027%20" target="_blank">http://docs.sun.com/source/817-2180-10/pt_chap5.html#wp57027
 </a></p>
 <p><a href="#top">^ top</a>  </p>
 <hr width="99%" size="1" noshade>
 <table width="99%"  border="0" cellspacing="0" cellpadding="4">
  <tr>
    <td width="33%"><a href="basics.htm" class="navLinks"></a> </td>
    <td width="34%" align="center"><a href="../../index.htm" target="_top" class="navLinks">doc index </a></td>
    <td width="33%" align="right"><a href="../running/basics.htm" class="navLinks"></a></td>
  </tr>
</table>

</body>
</html>
